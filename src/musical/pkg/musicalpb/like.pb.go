// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: like.proto

package musicalpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LikeArtistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArtistId      string                 `protobuf:"bytes,2,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeArtistRequest) Reset() {
	*x = LikeArtistRequest{}
	mi := &file_like_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeArtistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeArtistRequest) ProtoMessage() {}

func (x *LikeArtistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeArtistRequest.ProtoReflect.Descriptor instead.
func (*LikeArtistRequest) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{0}
}

func (x *LikeArtistRequest) GetArtistId() string {
	if x != nil {
		return x.ArtistId
	}
	return ""
}

type UnlikeArtistRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArtistId      string                 `protobuf:"bytes,2,opt,name=artist_id,json=artistId,proto3" json:"artist_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlikeArtistRequest) Reset() {
	*x = UnlikeArtistRequest{}
	mi := &file_like_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlikeArtistRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikeArtistRequest) ProtoMessage() {}

func (x *UnlikeArtistRequest) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikeArtistRequest.ProtoReflect.Descriptor instead.
func (*UnlikeArtistRequest) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{1}
}

func (x *UnlikeArtistRequest) GetArtistId() string {
	if x != nil {
		return x.ArtistId
	}
	return ""
}

type GetLikedArtistsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLikedArtistsRequest) Reset() {
	*x = GetLikedArtistsRequest{}
	mi := &file_like_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLikedArtistsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikedArtistsRequest) ProtoMessage() {}

func (x *GetLikedArtistsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikedArtistsRequest.ProtoReflect.Descriptor instead.
func (*GetLikedArtistsRequest) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{2}
}

func (x *GetLikedArtistsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetLikedArtistsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetLikedArtistsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artists       []*Artist              `protobuf:"bytes,1,rep,name=artists,proto3" json:"artists,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLikedArtistsResponse) Reset() {
	*x = GetLikedArtistsResponse{}
	mi := &file_like_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLikedArtistsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikedArtistsResponse) ProtoMessage() {}

func (x *GetLikedArtistsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikedArtistsResponse.ProtoReflect.Descriptor instead.
func (*GetLikedArtistsResponse) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{3}
}

func (x *GetLikedArtistsResponse) GetArtists() []*Artist {
	if x != nil {
		return x.Artists
	}
	return nil
}

type LikeTrackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TrackId       string                 `protobuf:"bytes,2,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeTrackRequest) Reset() {
	*x = LikeTrackRequest{}
	mi := &file_like_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeTrackRequest) ProtoMessage() {}

func (x *LikeTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeTrackRequest.ProtoReflect.Descriptor instead.
func (*LikeTrackRequest) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{4}
}

func (x *LikeTrackRequest) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

type UnlikeTrackRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TrackId       string                 `protobuf:"bytes,2,opt,name=track_id,json=trackId,proto3" json:"track_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlikeTrackRequest) Reset() {
	*x = UnlikeTrackRequest{}
	mi := &file_like_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlikeTrackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikeTrackRequest) ProtoMessage() {}

func (x *UnlikeTrackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikeTrackRequest.ProtoReflect.Descriptor instead.
func (*UnlikeTrackRequest) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{5}
}

func (x *UnlikeTrackRequest) GetTrackId() string {
	if x != nil {
		return x.TrackId
	}
	return ""
}

type GetLikedTracksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLikedTracksRequest) Reset() {
	*x = GetLikedTracksRequest{}
	mi := &file_like_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLikedTracksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikedTracksRequest) ProtoMessage() {}

func (x *GetLikedTracksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikedTracksRequest.ProtoReflect.Descriptor instead.
func (*GetLikedTracksRequest) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{6}
}

func (x *GetLikedTracksRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetLikedTracksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetLikedTracksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tracks        []*Track               `protobuf:"bytes,1,rep,name=tracks,proto3" json:"tracks,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLikedTracksResponse) Reset() {
	*x = GetLikedTracksResponse{}
	mi := &file_like_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLikedTracksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLikedTracksResponse) ProtoMessage() {}

func (x *GetLikedTracksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_like_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLikedTracksResponse.ProtoReflect.Descriptor instead.
func (*GetLikedTracksResponse) Descriptor() ([]byte, []int) {
	return file_like_proto_rawDescGZIP(), []int{7}
}

func (x *GetLikedTracksResponse) GetTracks() []*Track {
	if x != nil {
		return x.Tracks
	}
	return nil
}

func (x *GetLikedTracksResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_like_proto protoreflect.FileDescriptor

const file_like_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"like.proto\x12\amusical\x1a\fartist.proto\x1a\vtrack.proto\"0\n" +
	"\x11LikeArtistRequest\x12\x1b\n" +
	"\tartist_id\x18\x02 \x01(\tR\bartistId\"2\n" +
	"\x13UnlikeArtistRequest\x12\x1b\n" +
	"\tartist_id\x18\x02 \x01(\tR\bartistId\"I\n" +
	"\x16GetLikedArtistsRequest\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"D\n" +
	"\x17GetLikedArtistsResponse\x12)\n" +
	"\aartists\x18\x01 \x03(\v2\x0f.musical.ArtistR\aartists\"-\n" +
	"\x10LikeTrackRequest\x12\x19\n" +
	"\btrack_id\x18\x02 \x01(\tR\atrackId\"/\n" +
	"\x12UnlikeTrackRequest\x12\x19\n" +
	"\btrack_id\x18\x02 \x01(\tR\atrackId\"H\n" +
	"\x15GetLikedTracksRequest\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"a\n" +
	"\x16GetLikedTracksResponse\x12&\n" +
	"\x06tracks\x18\x01 \x03(\v2\x0e.musical.TrackR\x06tracks\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCountBCZAgithub.com/TeoPlow/online-music-service/src/musical/pkg/musicalpbb\x06proto3"

var (
	file_like_proto_rawDescOnce sync.Once
	file_like_proto_rawDescData []byte
)

func file_like_proto_rawDescGZIP() []byte {
	file_like_proto_rawDescOnce.Do(func() {
		file_like_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_like_proto_rawDesc), len(file_like_proto_rawDesc)))
	})
	return file_like_proto_rawDescData
}

var file_like_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_like_proto_goTypes = []any{
	(*LikeArtistRequest)(nil),       // 0: musical.LikeArtistRequest
	(*UnlikeArtistRequest)(nil),     // 1: musical.UnlikeArtistRequest
	(*GetLikedArtistsRequest)(nil),  // 2: musical.GetLikedArtistsRequest
	(*GetLikedArtistsResponse)(nil), // 3: musical.GetLikedArtistsResponse
	(*LikeTrackRequest)(nil),        // 4: musical.LikeTrackRequest
	(*UnlikeTrackRequest)(nil),      // 5: musical.UnlikeTrackRequest
	(*GetLikedTracksRequest)(nil),   // 6: musical.GetLikedTracksRequest
	(*GetLikedTracksResponse)(nil),  // 7: musical.GetLikedTracksResponse
	(*Artist)(nil),                  // 8: musical.Artist
	(*Track)(nil),                   // 9: musical.Track
}
var file_like_proto_depIdxs = []int32{
	8, // 0: musical.GetLikedArtistsResponse.artists:type_name -> musical.Artist
	9, // 1: musical.GetLikedTracksResponse.tracks:type_name -> musical.Track
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_like_proto_init() }
func file_like_proto_init() {
	if File_like_proto != nil {
		return
	}
	file_artist_proto_init()
	file_track_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_like_proto_rawDesc), len(file_like_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_like_proto_goTypes,
		DependencyIndexes: file_like_proto_depIdxs,
		MessageInfos:      file_like_proto_msgTypes,
	}.Build()
	File_like_proto = out.File
	file_like_proto_goTypes = nil
	file_like_proto_depIdxs = nil
}
