// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.2
// source: musical.proto

package musicalpb

import (
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Track struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // UUID
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	AlbumId       string                 `protobuf:"bytes,3,opt,name=album_id,json=albumId,proto3" json:"album_id,omitempty"` // UUID
	Genre         string                 `protobuf:"bytes,4,opt,name=genre,proto3" json:"genre,omitempty"`
	Duration      uint32                 `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Track) Reset() {
	*x = Track{}
	mi := &file_musical_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Track) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Track) ProtoMessage() {}

func (x *Track) ProtoReflect() protoreflect.Message {
	mi := &file_musical_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Track.ProtoReflect.Descriptor instead.
func (*Track) Descriptor() ([]byte, []int) {
	return file_musical_proto_rawDescGZIP(), []int{0}
}

func (x *Track) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Track) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Track) GetAlbumId() string {
	if x != nil {
		return x.AlbumId
	}
	return ""
}

func (x *Track) GetGenre() string {
	if x != nil {
		return x.Genre
	}
	return ""
}

func (x *Track) GetDuration() uint32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *Track) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Track) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type IDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // UUID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IDRequest) Reset() {
	*x = IDRequest{}
	mi := &file_musical_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDRequest) ProtoMessage() {}

func (x *IDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_musical_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDRequest.ProtoReflect.Descriptor instead.
func (*IDRequest) Descriptor() ([]byte, []int) {
	return file_musical_proto_rawDescGZIP(), []int{1}
}

func (x *IDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_musical_proto protoreflect.FileDescriptor

const file_musical_proto_rawDesc = "" +
	"\n" +
	"\rmusical.proto\x12\amusical\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf0\x01\n" +
	"\x05Track\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x19\n" +
	"\balbum_id\x18\x03 \x01(\tR\aalbumId\x12\x14\n" +
	"\x05genre\x18\x04 \x01(\tR\x05genre\x12\x1a\n" +
	"\bduration\x18\x05 \x01(\rR\bduration\x129\n" +
	"\n" +
	"created_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\x1b\n" +
	"\tIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id2r\n" +
	"\fMusicService\x122\n" +
	"\bAddMusic\x12\x0e.musical.Track\x1a\x16.google.protobuf.Empty\x12.\n" +
	"\bGetMusic\x12\x12.musical.IDRequest\x1a\x0e.musical.TrackBCZAgithub.com/TeoPlow/online-music-service/src/musical/pkg/musicalpbb\x06proto3"

var (
	file_musical_proto_rawDescOnce sync.Once
	file_musical_proto_rawDescData []byte
)

func file_musical_proto_rawDescGZIP() []byte {
	file_musical_proto_rawDescOnce.Do(func() {
		file_musical_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_musical_proto_rawDesc), len(file_musical_proto_rawDesc)))
	})
	return file_musical_proto_rawDescData
}

var file_musical_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_musical_proto_goTypes = []any{
	(*Track)(nil),                 // 0: musical.Track
	(*IDRequest)(nil),             // 1: musical.IDRequest
	(*timestamppb.Timestamp)(nil), // 2: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 3: google.protobuf.Empty
}
var file_musical_proto_depIdxs = []int32{
	2, // 0: musical.Track.created_at:type_name -> google.protobuf.Timestamp
	2, // 1: musical.Track.updated_at:type_name -> google.protobuf.Timestamp
	0, // 2: musical.MusicService.AddMusic:input_type -> musical.Track
	1, // 3: musical.MusicService.GetMusic:input_type -> musical.IDRequest
	3, // 4: musical.MusicService.AddMusic:output_type -> google.protobuf.Empty
	0, // 5: musical.MusicService.GetMusic:output_type -> musical.Track
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_musical_proto_init() }
func file_musical_proto_init() {
	if File_musical_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_musical_proto_rawDesc), len(file_musical_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_musical_proto_goTypes,
		DependencyIndexes: file_musical_proto_depIdxs,
		MessageInfos:      file_musical_proto_msgTypes,
	}.Build()
	File_musical_proto = out.File
	file_musical_proto_goTypes = nil
	file_musical_proto_depIdxs = nil
}
