// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/TeoPlow/online-music-service/src/musical/internal/domain (interfaces: AlbumClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/TeoPlow/online-music-service/src/musical/internal/models"
	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockAlbumClient is a mock of AlbumClient interface.
type MockAlbumClient struct {
	ctrl     *gomock.Controller
	recorder *MockAlbumClientMockRecorder
}

// MockAlbumClientMockRecorder is the mock recorder for MockAlbumClient.
type MockAlbumClientMockRecorder struct {
	mock *MockAlbumClient
}

// NewMockAlbumClient creates a new mock instance.
func NewMockAlbumClient(ctrl *gomock.Controller) *MockAlbumClient {
	mock := &MockAlbumClient{ctrl: ctrl}
	mock.recorder = &MockAlbumClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlbumClient) EXPECT() *MockAlbumClientMockRecorder {
	return m.recorder
}

// GetAlbum mocks base method.
func (m *MockAlbumClient) GetAlbum(arg0 context.Context, arg1 uuid.UUID) (models.Album, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAlbum", arg0, arg1)
	ret0, _ := ret[0].(models.Album)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAlbum indicates an expected call of GetAlbum.
func (mr *MockAlbumClientMockRecorder) GetAlbum(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAlbum", reflect.TypeOf((*MockAlbumClient)(nil).GetAlbum), arg0, arg1)
}
