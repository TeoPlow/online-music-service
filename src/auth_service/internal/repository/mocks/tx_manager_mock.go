// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/TeoPlow/online-music-service/src/auth_service/internal/storage (interfaces: TxManagerInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTxManagerInterface is a mock of TxManagerInterface interface.
type MockTxManagerInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTxManagerInterfaceMockRecorder
}

// MockTxManagerInterfaceMockRecorder is the mock recorder for MockTxManagerInterface.
type MockTxManagerInterfaceMockRecorder struct {
	mock *MockTxManagerInterface
}

// NewMockTxManagerInterface creates a new mock instance.
func NewMockTxManagerInterface(ctrl *gomock.Controller) *MockTxManagerInterface {
	mock := &MockTxManagerInterface{ctrl: ctrl}
	mock.recorder = &MockTxManagerInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTxManagerInterface) EXPECT() *MockTxManagerInterfaceMockRecorder {
	return m.recorder
}

// RunReadUncommited mocks base method.
func (m *MockTxManagerInterface) RunReadUncommited(arg0 context.Context, arg1 func(context.Context) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunReadUncommited", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// RunReadUncommited indicates an expected call of RunReadUncommited.
func (mr *MockTxManagerInterfaceMockRecorder) RunReadUncommited(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunReadUncommited", reflect.TypeOf((*MockTxManagerInterface)(nil).RunReadUncommited), arg0, arg1)
}

// RunSerializable mocks base method.
func (m *MockTxManagerInterface) RunSerializable(arg0 context.Context, arg1 func(context.Context) error) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RunSerializable", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// RunSerializable indicates an expected call of RunSerializable.
func (mr *MockTxManagerInterfaceMockRecorder) RunSerializable(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RunSerializable", reflect.TypeOf((*MockTxManagerInterface)(nil).RunSerializable), arg0, arg1)
}
