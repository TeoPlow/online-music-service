run:
  timeout: 5m
  tests: true

linters:
  enable:
    - govet              # стандартные проверки от go vet
    - errcheck           # пропущенные проверки ошибок
    - staticcheck        # множество анализов кода
    - gosimple           # упрощение кода
    - unused             # неиспользуемые переменные, функции и т.д.
    - typecheck          # типовые ошибки
    - depguard           # запрет импорта определённых пакетов
    - gofmt              # стиль форматирования
    - goimports          # порядок импортов
    - revive             # лёгкий и гибкий линтер стиля
    - ineffassign        # неэффективные присваивания
    - nilerr             # nil вместо ошибки
    - gocritic           # различные эвристики
    - misspell           # орфография
    - copyloopvar
    - lll
linters-settings:
  gofmt:
    simplify: true

  revive:
    severity: warning
    rules:
      - name: indent-error-flow
      - name: var-naming
      - name: package-comments
      - name: if-return
      - name: dot-imports

  goimports:
    local-prefixes: github.com/TeoPlow/online-music-service

  misspell:
    locale: RU    

  lll:
    line-length: 120
    tab-width: 4
    ignore-strings: true
    ignore-comments: true

  depguard:
    rules:
      main:
        list-mode: strict
        files:
          - "**/cmd/**"
        allow:
          - context
          - flag
          - log
          - os
          - os/signal
          - syscall
          - github.com/joho/godotenv 
          - "github.com/TeoPlow/online-music-service"
      musical-internal:
        list-mode: strict
        files:
          - "**/musical/internal/**"
        allow:
          # std
          - $gostd
          - "github.com/google/uuid"
          - "gopkg.in/yaml.v3"
          # for http
          - "github.com/gorilla/mux"
          # for grpc
          - "google.golang.org/grpc"
          - "google.golang.org/protobuf/types/known"
          # for postgres
          - "github.com/jackc"
          - "github.com/georgysavva/scany/pgxscan"
          # internal packages
          - "github.com/TeoPlow/online-music-service/src/musical/internal"
          - "github.com/TeoPlow/online-music-service/src/musical/pkg"
      auth_service-internal:
          list-mode: strict
          files:
            - "src/auth_service/internal/**"
            - "src/auth_service/cmd/**"
            - "src/auth_service/auth_test/**"
            - "src/auth_service/**/*.go"
          allow:
            # std
            - $gostd
            - "github.com/google/uuid"
            - "github.com/zhavkk/Auth-protobuf/gen/go/auth"
            - "github.com/golang-jwt/jwt/v5"
            - "github.com/jackc/pgx/v5"
            - "github.com/jackc/pgx/v5/pgxpool"
            - "github.com/georgysavva/scany/pgxscan"
            - "github.com/stretchr/testify/assert"
            - "github.com/stretchr/testify/require"
            - "github.com/joho/godotenv"
            - "github.com/ilyakaznacheev/cleanenv"
            - "golang.org/x/crypto/bcrypt"
            - "go.uber.org/mock/gomock"
            - "google.golang.org/grpc"
            - "google.golang.org/grpc/codes"
            - "google.golang.org/grpc/status"
            - "google.golang.org/grpc/metadata"
            - "google.golang.org/grpc/credentials/insecure"
            - "google.golang.org/grpc/test/bufconn"
            - "github.com/TeoPlow/online-music-service/auth_service/internal"
            - "github.com/TeoPlow/online-music-service/auth_service/internal/logger"
            - "github.com/TeoPlow/online-music-service/auth_service/internal/pkg/jwt"
            - "github.com/TeoPlow/online-music-service/auth_service/internal/repository"
            - "github.com/TeoPlow/online-music-service/auth_service/internal/service"
            - "github.com/TeoPlow/online-music-service/auth_service/internal/storage"
            - "github.com/TeoPlow/online-music-service/auth_service/internal/validation"
            - "github.com/TeoPlow/online-music-service/auth_service/pkg"
            - "github.com/TeoPlow/online-music-service/auth_service/internal/models"
      other:
        list-mode: strict
        files:
          - $all
          - "!**/cmd/**"
          - "!**/musical/**"
          - "!**/auth_service/**"
        allow:
          - $gostd
    

issues:
  exclude-use-default: false
  exclude-dirs:
    - "mocks"
  exclude-files:
    - ".*_mock.go"
  max-issues-per-linter: 0
  max-same-issues: 0
  exclude:
    - "should have comment or be unexported"  # ослабим комментарии на экспортируемые
    - "error return value not checked"        # иногда нужно, но часто — шум
  exclude-rules:
    - path: "cmd/.*/main.go"
      linters:
        - revive

output:
  formats: colored-line-number
  print-issued-lines: true
  print-linter-name: true
